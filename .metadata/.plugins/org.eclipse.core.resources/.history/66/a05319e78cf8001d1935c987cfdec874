 package com.tutorMe.model;

import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name="studenti")
@NoArgsConstructor
@AllArgsConstructor
@Data
public class Studente {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	@Column(nullable = false)
	private String nome;
	
	@Column(nullable = false)
	private String cognome;
	
	@Column(nullable = false)
	private Integer eta;
	
	@Column(nullable = false)
	private String citta;
	
	@Column(nullable = false, unique = true)
	private String email;
	
	@OneToMany(mappedBy = "studente",cascade = CascadeType.MERGE)
	@JsonIgnoreProperties
	private List<Prenotazione> listaPrenotazioni;

	
	public Studente(String nome, String cognome, Integer eta, String citta, String email,
			List<Prenotazione> listaPrenotazioni) {
		super();
		this.nome = nome;
		this.cognome = cognome;
		this.eta = eta;
		this.citta = citta;
		this.email = email;
		this.listaPrenotazioni = listaPrenotazioni;
		this.listaPrenotazioni.forEach(p -> p.setStudente(this));
	}



	public Studente(String nome, String cognome, Integer eta, String citta, String eMail) {
		super();
		this.nome = nome;
		this.cognome = cognome;
		this.eta = eta;
		this.citta = citta;
		this.email = email;
	}

	
}
