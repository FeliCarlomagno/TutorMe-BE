package com.tutorMe.model;

import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.tutorMe.enums.TipoInsegnante;
import com.tutorMe.enums.TitoloDiStudio;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table (name="insegnanti")
@NoArgsConstructor
@AllArgsConstructor
@Data
public class Insegnante {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	@Column(nullable = false)
	private String nome;
	
	@Column(nullable = false)
	private String cognome;
	
	@Column(nullable = false)
	private Integer eta;
	
	@Column(nullable = false, unique = true)
	private String email;
	
	@Column(nullable = false)
	private String citta;
	
//	private String phone;
	
//	private String lingueParlate;
	
	@Column(nullable = false)
	@Enumerated(EnumType.STRING)
	private TipoInsegnante tipoInsegnante;
	
	@Column(nullable = false)
	@Enumerated(EnumType.STRING)
	private List<TitoloDiStudio> titoliStudio = new ArrayList<>();
	
	@Column(nullable = false)
	private Integer anniEsperienza;
	
	@Column(nullable = false)
	private List<String> materia;
	
	@Column(nullable = false)
	private Integer tariffaOraria;
	
	@OneToMany(mappedBy = "insegnante",cascade = CascadeType.MERGE)
	@JsonIgnoreProperties
	private List<Prenotazione> listaPrenotazioni;

	public Insegnante(String nome, String cognome, Integer eta, String email, String citta,
			TipoInsegnante tipoInsegnante, List<TitoloDiStudio> titoliStudio, Integer anniEsperienza, String materia,
			Integer tariffaOraria, List<Prenotazione> listaPrenotazioni) {
		super();
		this.nome = nome;
		this.cognome = cognome;
		this.eta = eta;
		this.email = email;
		this.citta = citta;
		this.tipoInsegnante = tipoInsegnante;
		this.titoliStudio = titoliStudio;
		this.anniEsperienza = anniEsperienza;
		this.materia = materia;
		this.tariffaOraria = tariffaOraria;
		this.listaPrenotazioni = listaPrenotazioni;
		this.listaPrenotazioni.forEach(p -> p.setInsegnante(this));
	}

	
	
	
}
